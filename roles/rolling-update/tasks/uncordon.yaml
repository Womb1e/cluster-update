---
#- name: wait for node {{ groups['master'][0] }} to be available
#  wait_for:
#    host: "{{ groups['master'][0] }}"
#    port: 6443
#    delay: 10

- name: Wait for node to be ready
  command: >-
    {{ bin_dir }}/kubectl get node
    {{ kube_override_hostname|default(inventory_hostname) }}
  register: node
  retries: 30
  delay: 10
  until: "'Ready' in node.stdout"   

- name: Uncordon node
  command: >-
    {{ bin_dir }}/kubectl uncordon
    {{ kube_override_hostname|default(inventory_hostname) }}
  delegate_to: "{{ groups['master'][0] }}"
  changed_when: false

- name: Wait for node to uncordon
  command: >-
    {{ bin_dir }}/kubectl get node
    {{ kube_override_hostname|default(inventory_hostname) }}
    -o json
  register: wait_for_uncordon
  retries: 1000
  delay: 10
  delegate_to: "{{ groups['master'][0] }}"
  changed_when: false
  until: not (kubectl_get_node['stdout'] | from_json).spec.unschedulable is defined

#- name: Verification
#  block:
#    - name: Verify that all nodes actually joined (check k3s-init.service if this fails)
#      command:
#        cmd: k3s kubectl get node  "{{ groups['master'][0] }}" -o=jsonpath="{.items[*].metadata.name}"
#      register: nodes
#      until: nodes.rc == 0 and (nodes.stdout.split() | length) == (groups['master'] | length)
#      retries: "{{ retry_count | default(20) }}"
#      delay: 10
#      changed_when: false
#  always:
#    - name: Kill the temporary service used for initialization
#      systemd:
#        name: k3s-init
#        state: stopped
#      failed_when: false